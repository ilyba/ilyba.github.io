<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="en" /><updated>2024-06-27T22:24:35+00:00</updated><id>/feed.xml</id><title type="html">ILYBA</title><subtitle>Développement d&apos;applications Web et mobile</subtitle><entry><title type="html">Scalable and Efficient Data Exports: Enabling ActiveAdmin’s Asynchronous Mode</title><link href="/rails/activeadmin/2024/04/25/exports-csv-asynchrones-activeadmin.html" rel="alternate" type="text/html" title="Scalable and Efficient Data Exports: Enabling ActiveAdmin’s Asynchronous Mode" /><published>2024-04-25T19:37:00+00:00</published><updated>2024-04-25T19:37:00+00:00</updated><id>/rails/activeadmin/2024/04/25/exports-csv-asynchrones-activeadmin</id><content type="html" xml:base="/rails/activeadmin/2024/04/25/exports-csv-asynchrones-activeadmin.html"><![CDATA[<p>Data export is a essential feature in many modern web applications.
In ActiveAdmin, CSV exports are synchronously generated by default.
However, when the exported data sets are large, this approach can lead
to prolonged blocking of HTTP connections, negatively affecting
the overall performance of the application.</p>

<p>When a connection stays busy for too long, it can exhaust
the server’s resources, causing delays for other users.
If this situation persists and resources are completely depleted,
other users’ requests will be blocked, rendering the application inaccessible.</p>

<p>To address this problem, the gem <code class="language-plaintext highlighter-rouge">activeadmin-async_exporter</code> was initially
developed to enable asynchronous export generation through ActiveJob. However,
we encountered several issues with this solution. First,
the <code class="language-plaintext highlighter-rouge">activeadmin-async_exporter</code> gem is no longer maintained
and is incompatible with the latest versions of Rails.</p>

<p>While trying to install it, we ran into a <code class="language-plaintext highlighter-rouge">NameError</code>,,
which seemed to be related to autoloading issues. Additionally, the configuration
of <code class="language-plaintext highlighter-rouge">strong parameters</code> is not considered, and the gem uses
the <code class="language-plaintext highlighter-rouge">current_admin_user</code> method, whereas our application uses <code class="language-plaintext highlighter-rouge">current_user</code>.</p>

<p>Although ActiveAdmin allows configuring these aspects,
the <code class="language-plaintext highlighter-rouge">activeadmin-async_exporter</code> gem does not suppport these configurations.</p>

<p>Moreover, the gem does not support ActiveStorage and uses a different file storage system.</p>

<p>Although the gem provides a code generator for setting up a database migration
and an ActiveAdmin resource, its use is not documented in the README.
The README only mentions adding the gem to the Gemfile
without providing detailed instructions.</p>

<p>Given these limitations, we decided to integrate the code from
the <code class="language-plaintext highlighter-rouge">activeadmin-async_exporter</code> gem into our application,
customizing it to meet our specific needs.</p>

<p>We have not published the gem yet as our current efforts are focused
on other aspects of our project. Although the current code meets our
internal requirements, we have not planned to invest additional time
adapting it for potential public release. Thus, we prefer to leave
it as is for now, without completely ruling out the possibility
of future publication.</p>

<p>Extracting the code posed some technical challenges.
Specifically, out worker needed to inherit from ApplicationJob,
requiring us to place the code in the <code class="language-plaintext highlighter-rouge">app/workers</code> directory.
Additionally, some aspects of the code had to be modified
to ensure compatibility with our application.</p>

<p>Despite these difficulties, using asynchronous exports in ActiveAdmin
has proven crucial in improving the performance of our application.
By adapting the existing gem to fit our specific needs, we were able
to leverage this technology while maintaining complete control
over its functionality.</p>

<p>Through this process, we were able to significantly enhance the scalability
and efficiency of our system, while simultaneously providing
a smoother and more responsive experience for our users.</p>]]></content><author><name></name></author><category term="Rails" /><category term="ActiveAdmin" /><summary type="html"><![CDATA[Data export is a essential feature in many modern web applications. In ActiveAdmin, CSV exports are synchronously generated by default. However, when the exported data sets are large, this approach can lead to prolonged blocking of HTTP connections, negatively affecting the overall performance of the application.]]></summary></entry></feed>