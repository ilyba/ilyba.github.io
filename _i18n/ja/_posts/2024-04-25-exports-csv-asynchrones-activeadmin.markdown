---
layout: article
title:  "スケーラブルで効率的なデータエクスポート：ActiveAdminの非同期モードを有効にする"
date:   2024-04-25 21:37:00 +0200
categories: Rails ActiveAdmin
---
データエクスポートは、多くの現代のウェブアプリケーションにおいて不可欠な機能です。
ActiveAdminでは、CSVエクスポートがデフォルトでは同期的に生成されます。しかし、
エクスポートされるデータセットが大きい場合、
このアプローチはHTTP接続の長時間のブロックを引き起こし、
アプリケーションの全体的なパフォーマンスに悪影響を与えることがあります。

接続が長時間忙しい状態のままになると、サーバーのリソースが枯渇し、
他のユーザーに遅延を引き起こします。この状況が続き、リソースが完全に枯渇すると、
他のユーザーのリクエストがブロックされ、アプリケーションが利用できなくなります。

この問題に対処するために、`activeadmin-async_exporter`というジェムが最初に開発され、
ActiveJob を通じて非同期エクスポートの生成を可能にしました。しかし、このソリューション
にはいくつかの問題がありました。まず、`activeadmin-async_exporter`
ジェムはもうメンテナンスされておらず、最新の Rails バージョンと互換性がありません。

実際にインストールを試みた際、`NameError` に遭遇しました。
これはオートローディングの問題に関連しているようでした。さらに、
`strong parameters` の設定が考慮されておらず、このジェムは `current_admin_user`
メソッドを使用していますが、私たちのアプリケーションでは `current_user` を使用しています。

ActiveAdmin はこれらの設定を構成することは可能ですが、
`activeadmin-async_exporter` ジェムはこれらの設定をサポートしていません。

さらに、このジェムは ActiveStorage をサポートしておらず、
異なるファイルストレージシステムを使用しています。

また、データベースのマイグレーションと ActiveAdmin のリソースを設定するため
のコードジェネレーターを提供していますが、その使用方法はREADMEに記載されていません。
READMEには、単にGemをGemfileに追加することだけが記載されており、詳細な指示がありません。

これらの制約を考慮して、私たちは`activeadmin-async_exporter`ジェムのコードを私たちのアプリケーションに統合し、
私たちの具体的なニーズに合わせてカスタマイズすることに決めました。

このジェムをまだ公開していないのは、現在の努力が他のプロジェクトの側面に集中しているためです。
現在のコードは内部の要件を満たしていますが、公的なリリースのためにさらに時間を割く計画はありません。
したがって、今のところはそのままにしておくことにしますが、将来的に公開する可能性を完全に否定するわけではありません。

コードの抽出は技術的な挑戦を引き起こしました。特に、ワーカーはApplicationJobを継承する必要があり、
そのためにコードを`app/workers`ディレクトリに配置する必要がありました。さらに、
アプリケーションとの互換性を確保するために、コードのいくつかの側面を変更する必要がありました。

これらの困難にもかかわらず、ActiveAdminで非同期エクスポートを使用することは、
アプリケーションの性能向上において極めて重要であることが証明されました。
既存のジェムを私たちの特定のニーズに合わせて適応させることで、この技術を活用しつつ、
その機能性を完全にコントロールすることができました。

このプロセスを通じて、私たちはシステムの拡張性と効率性を大幅に向上させることができ、
同時にユーザーに対してよりスムーズで応答性の高いエクスペリエンスを提供することができました。
